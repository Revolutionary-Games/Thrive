# the name of the target operating system

SET(MINGW_ENV @MINGW_ENV@)

# which compilers to use for C and C++
SET(CMAKE_C_COMPILER ${MINGW_ENV}/bin/gcc.exe)
SET(CMAKE_CXX_COMPILER ${MINGW_ENV}/bin/g++.exe)
SET(CMAKE_RC_COMPILER ${MINGW_ENV}/bin/windres.exe)
SET(CMAKE_RANLIB ${MINGW_ENV}/bin/ranlib.exe)

# here is the target environment located
SET(CMAKE_FIND_ROOT_PATH  ${MINGW_ENV} ${MINGW_ENV}/install)

# adjust the default behaviour of the FIND_XXX() commands:
# search headers and libraries in the target environment, search
# programs in the host environment
set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)

# Ogre SDK
SET(OGRE_SDK ${MINGW_ENV}/OgreSDK
    CACHE STRING "Path to the Ogre SDK"
)

# Google test
set(GOOGLE_TEST_DIR ${MINGW_ENV}/gtest
    CACHE STRING "Path to Google Test"
)

# Boost
set(Boost_THREADAPI win32)

# Add to cmake path
list(APPEND CMAKE_MODULE_PATH
    ${MINGW_ENV}/cmake
    ${OGRE_SDK}/CMake
)

set(SYSTEM_DLLS
    # None, native windows doesn't seem to need libgcc and so on
)
