version: 1

jobs:
  build:
    image: thrive/godot-ci:v26
    cache:
      loadFrom:
        - v11-{Branch}-build
        - v11-master-build
      writeTo: v11-{Branch}-build
      shared:
        .git/lfs: v7-lfs
        .import: v12-import
        builds: v7-builds
        native_libs: v1-native
      system:
        /root/.nuget: v7-nuget
    steps:
      # Doesn't seem required for Godot 4
      # - run:
      #     name: Make project valid for compile
      #     command: dotnet run --project Scripts -- make-project-valid
      - run:
           command: dotnet restore Thrive.sln
      - run:
          name: Build with warnings
          command: dotnet run --project Scripts -- check compile
      - run:
          name: Download native libraries
          # This doesn't fetch or install debug variants as they aren't strictly necessary for packaging
          command: dotnet run --project Scripts -- native Fetch --debug false
      - run:
          name: Create builds
          command: dotnet run --project Scripts -- package --dehydrated
      - run:
          name: Upload devbuilds
          command: dotnet run --project Scripts -- upload
  jetbrains:
    image: thrive/godot-ci:v26
    cache:
      loadFrom:
        - v9-{Branch}-jetbrains
        - v9-master-jetbrains
      writeTo: v9-{Branch}-jetbrains
      shared:
        .git/lfs: v7-lfs
      system:
        /root/.nuget: v7-nuget
    artifacts:
      paths:
        - files_to_check.txt
        - inspect_results.xml
        - cleanup_diff.patch
    steps:
      - run:
          name: Build list of changed files
          # Remove the cat here once artifact uploads is done:
          command: |
            git diff-tree --no-commit-id --name-only -r HEAD..origin/$CI_DEFAULT_BRANCH > files_to_check.txt
            git diff-tree --no-commit-id --name-only -r HEAD..$CI_EARLIER_COMMIT >> files_to_check.txt || echo compare with previous commit failed
            echo Changed files:
            cat files_to_check.txt
      - run:
          name: Make sure Thrive is compiled
          command: dotnet build Thrive.sln
      - run:
           command: dotnet tool restore
      # Makes sure that there aren't any changes at this point to not make the CI trip up on them
      - run:
          name: Make sure no changes to git tracked files at this point
          command: GIT_LFS_SKIP_SMUDGE=1 git reset --hard HEAD
      - run:
          name: Jetbrains inspectcode
          command: dotnet run --project Scripts -- check inspectcode
      - run:
          name: Code reformatting
          command: dotnet run --project Scripts -- check cleanupcode
      # dupfinder is deprecated, see: https://github.com/Revolutionary-Games/Thrive/issues/2953
      # - run:
      #     command: ./check_formatting.rb -c duplicatecode
      # Cleanup, this takes a *long* time when checking a lot of files
      - run:
          when: always
          name: Check cleanup changes
          command: |
            git diff > cleanup_diff.patch
            if grep -q '[^[:space:]]' < cleanup_diff.patch; then
                echo "Code cleanup found things to be fixed:"
                cat cleanup_diff.patch
                exit 1
            else
                echo "No changes made"
                rm -f cleanup_diff.patch
            fi
  format_test:
    image: thrive/godot-ci:v26
    cache:
      loadFrom:
        - v9-{Branch}-format
        - v9-master-format
      writeTo: v9-{Branch}-format
      shared:
        .git/lfs: v7-lfs
      system:
        /root/.nuget: v7-nuget
    artifacts:
      paths:
        - format_diff.patch
    steps:
      - run:
          command: dotnet restore Scripts/Scripts.csproj
      - run:
          name: Unit tests
          command: GODOT_BIN=$(which godot) dotnet test
      - run:
          name: files localization steam-build rewrite checks
          command: dotnet run --project Scripts -- check files localization steam-build rewrite
      - run:
          when: always
          name: Check format changes
          command: |
            git diff > format_diff.patch
            if grep -q '[^[:space:]]' < format_diff.patch; then
                echo "Formatter found things to be fixed:"
                cat format_diff.patch
                exit 1
            else
                echo "No changes made"
                rm -f format_diff.patch
            fi
