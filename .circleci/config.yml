version: 2.1
jobs:
   build:
     working_directory: ~/Thrive
     docker:
       - image: hhyyrylainen/godot-ci:v5
     environment:
       GIT_LFS_SKIP_SMUDGE: 1
     steps:
       - checkout
       - restore_cache:
           keys:
             - v7-lfs-{{ .Branch }}
             - v7-lfs-master
       - run:
           name: Pull Git LFS files, retry up to 5 times
           command: |
             for i in {1..5}; do git reset --hard HEAD && git clean -fd && git lfs pull && exit 0; done; exit 1
       - save_cache:
          key: v7-lfs-{{ .Branch }}
          paths:
            - .git/lfs
       - restore_cache:
           keys:
             - v5-import-{{ .Branch }}
             - v5-import-master
       - run: mkdir -p builds
       # This is here to reimport assets, but this build would fail due to missing nuget packages
       # if C# was compiled here
       - run: godot --export "Linux/X11" "builds/a.x86_64"
       # - run: ./headless_project_refresh.rb
       - save_cache:
           key: v5-import-{{ .Branch }}
           paths:
             - .import
       - restore_cache:
           keys:
             - v2-nuget-{{ .Branch }}
       - run: nuget restore Thrive.sln
       - save_cache:
          key: v2-nuget-{{ .Branch }}
          paths:
            - ~/.nuget/packages
       # Format check before making final packages
       - run: ./check_formatting.rb -c compile
       # Proper packages
       - run: ./make_release.rb --dehydrated
       # Upload devbuilds
       - run: ./upload_devbuilds.rb
   jetbrains:
     working_directory: ~/Thrive
     docker:
       - image: hhyyrylainen/godot-ci:v5
     environment:
       GIT_LFS_SKIP_SMUDGE: 1
       CIRCLE_COMPARE_URL: << pipeline.project.git_url >>/compare/<< pipeline.git.base_revision >>..<<pipeline.git.revision>>
     steps:
       - checkout
       - restore_cache:
           keys:
             - v7-lfs-{{ .Branch }}
             - v7-lfs-master
       - run:
           name: Pull Git LFS files, retry up to 5 times
           command: |
             for i in {1..5}; do git reset --hard HEAD && git clean -fd && git lfs pull && exit 0; done; exit 1
       - run:
           name: Detect changed files (since last commit and against master)
           command: |
             git fetch origin master
             git diff-tree --no-commit-id --name-only -r HEAD..origin/master > files_to_check.txt
             git diff-tree --no-commit-id --name-only -r `echo ${CIRCLE_COMPARE_URL} | cut -d/ -f 7` >> files_to_check.txt || true
       - restore_cache:
           keys:
             - v5-import-{{ .Branch }}
             - v5-import-master
       - run: mkdir -p builds
       # Don't care if this fails, it's enough that the C# build works
       - run:
           name: Just make C# project valid; don't care if asset import fails
           command: |
             godot --export "Linux/X11" "builds/a.x86_64" || true
       - restore_cache:
           keys:
             - v2-nuget-{{ .Branch }}
       - run: nuget restore Thrive.sln
       # Inspect code (this only takes like 40 seconds for all files)
       - run: ./check_formatting.rb -c inspectcode
       - run: ./check_formatting.rb -c duplicatecode
       # Cleanup, this takes a *long* time when checking a lot of files
       - run: ./check_formatting.rb -c cleanupcode
       - run:
           when: always
           command: |
             git diff > cleanup_diff.patch
             if grep -q '[^[:space:]]' < cleanup_diff.patch; then
                 echo "Code cleanup found things to be fixed:"
                 cat cleanup_diff.patch
                 exit 1
             else
                 echo "No changes made"
                 rm -f cleanup_diff.patch
             fi
       - store_artifacts:
          path: files_to_check.txt
       - store_artifacts:
          path: inspect_results.xml
       - store_artifacts:
          path: duplicate_results.xml
       - store_artifacts:
          path: cleanup_diff.patch
   format_script:
     working_directory: ~/Thrive
     docker:
       - image: hhyyrylainen/thrive-lint:v2
     environment:
       GIT_LFS_SKIP_SMUDGE: 1
     steps:
       - checkout
       - run: ./check_formatting.rb -c files
       - run:
           when: always
           command: |
             git diff > format_diff.patch
             if grep -q '[^[:space:]]' < format_diff.patch; then
                 echo "Formatter found things to be fixed:"
                 cat format_diff.patch
                 exit 1
             else
                 echo "No changes made"
                 rm -f format_diff.patch
             fi
       - store_artifacts:
          path: format_diff.patch

workflows:
  version: 2
  build_and_format:
    # Unfortunately godot is setup so that a build can't happen without having all the assets processed
    # so the format script can't check C# files
    jobs:
      - build
      - format_script
      - jetbrains
