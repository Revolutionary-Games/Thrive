# This file has all of the newer Thrive release patch notes so that they can
# be displayed in the game. This file must be manually updated before each
# release.

0.6.1:
  IntroductionText: |
    The highlights of this release are the new pulling cilia upgrade (and finished general upgrades framework), new movement mode selectable in the options along with further work towards full controller support, a microbe benchmarking tool, showing our news feed and new patch notes in the game, additional features for the auto-evo exploring tool, and of course various smaller bug fixes and tweaks.
  ReleaseLink: https://github.com/Revolutionary-Games/Thrive/releases/tag/v0.6.1
  PatchNotes:
    - Cilia now has an upgrade to make it pull in nearby objects, which is useful for predation
    - Added our website news feed to the main menu
    - Patch notes are now shown in the main menu first time when playing a new Thrive version
    - All patch notes can be accessed from the options menu
    - Added a new movement mode (screen relative) that can be used for keyboard input (it is the default mode for controller input)
    - Movement tutorial now works with a controller but has a warning that controller support is not fully done and is buggy
    - Added a microbe benchmark tool for more easily seeing what the game performance is on different hardware or testing changes that are meant to improve the game performance
    - Added new auto-evo exploring tool features (exporting data,  running multiple worlds in a row + others)
    - Added day/night cycle tutorial
    - Added buttons in main menu and the pause menu to open the link for reporting bugs
    - Improved dynamic MP calculation to better handle some cases, especially the new general organelle upgrades system
    - The resource and health bars now show up to 3 numbers before switching to "k" suffix notation. This fixes a problem where ATP amount could overflow the box reserved for it
    - Microbe stats are now updated when doing move or upgrade actions this will make the numbers more accurately represent the current state of the edited microbe
    - The evolutionary tree is now in the game when playing freebuild (doesn't work in older saves)
    - GUI button focus visuals where they look bad should now be fixed
    - It is now possible to rebind and see controller buttons in the options menu (note to get default controller keybindings you, the input options needs to be reset to get them to appear)
    - Added controller button icons from Xelu
    - Evolutionary tree now works for freebuild games started with a fossil
    - Process panel now keeps working even when the player is ready to enter the editor
    - Auto-evo exploring tool now shows the total simulation run time
    - Much more of the game GUI is now usable with a controller or the keyboard
    - Implemented controller navigation of tabbed GUI interfaces
    - Welcome tutorial message now focuses the start thriving button by default
    - Fixed a bug with options menu thinking there are changed options, if the settings file didn't exist
    - Fixed a bug where left and right keys didn't work for GUI focus control
    - Fixed a crash when an entity with attached fossilisation button was destroyed
    - Added fossilisation buttons to more places
    - Invalid fossil files are now skipped instead of crashing the game
    - Fixed a bug in world generation where it failed due to not keeping track of a created tidepool patch
    - World seed is now logged when map generation fails
    - Light level updates are now no longer applied each frame to save slightly on performance
    - Fixed a few errors that happened when Godot loaded our code into the Godot editor process
    - Input rebinding controls are now destroyed when the options menu is closed. This reduces the number of background objects listening for inputs constantly.
    - Cleaned up some old unused stuff in organelle data file
    - Removed negative (or zero) passed time checks as Godot Engine should have a fix in now to guard against
    - Removed the dependency on Python for our translations script now there's one less tool required when developing Thrive
    - Updated our tools and scripts to use .NET 7
    - Updated our style guide for .NET 7 new code checks and fixed new warnings they found
    - Highlighted git submodule importance in our setup instructions
    - Unified codebase by removing use of Godot meta in one place
    - Improved the Github issue bug report template
    - Added a support in our packaging script to target the web platform, but as expected the game is totally broken when exported that way (someone might come along at some point in the future and make it actually work, but we aren't promising anything regarding this)
    - Improved text extraction for translation tool
    - Translations files are now alphabetically sorted based on keys, which will hopefully make fewer PRs required to update translation files
    - Fixed some trailing new lines in English text
    - Added a new code formatting check to ensure correct XML documentation formatting
    - Added a new custom code checking tool that finds some C# style problems and corrects them automatically
    - Added code style check for incorrect whitespace in English text
    - Updated translations
    - "Steam: added a warning popup when Steam initialization fails"

0.6.2:
  IntroductionText: |
    A new Thrive release is here with some new graphical treats, further prototypes and a whole ton of small improvements and bug fixes.
  ReleaseLink: https://github.com/Revolutionary-Games/Thrive/releases/tag/v0.6.2
  PatchNotes:
    - "New further prototypes: going on land is now implemented, becoming aware and awakened has been added, added basic crafting, inventory and resource gathering, placing buildings and founding a settlement is now possible, accumulating resources and placing buildings is now possible in the society stage, and finally researching a new technology and placing a factory allows moving to the industrial stage. The industrial stage prototype is where the current prototype work ended up at. That stage has just a placeholder graphic for a city."
    - Added entirely new 3D scenes to be backgrounds for the main menu, some of these are a bit performance intensive and can be disabled in the options
    - The membrane generation algorithm is now massively faster, and only results in slightly visually different membranes
    - Tweaked membrane generation to be tighter around organelles to more closely match the physics, and made multihex organelles send all of their positions to the membrane to fix large organelles in certain cases poking outside the membrane
    - The editor compound balance now shows the situation at ATP equilibrium, instead of assuming all processes run at maximum speed always
    - Compound cloud visuals have been slightly improved with a higher resolution noise layer
    - Separation between divided cells and colonies is now much better
    - Tweaked the visuals of button focus highlights, along with a few other element types
    - Microbes now spawn with initial compounds that are proportional to their compound usage (instead of fixed values)
    - Added late multicellular stage underwater panoramic background
    - When the player now reproduces the game will try to keep the entity count under control by despawning existing entities if there are too many (player daughter cells are prioritized if they make up a large fraction of the total entity limit)
    - Cells in colonies are now counted in entity limit (except the player colony as the player is not part of the entity limit)
    - Added HUD messages that show to report various things to the player, for example if the player can't engulf something the reason is now shown with this kind of message
    - Colony members that can engulf can now enter engulf mode even if the player cell cannot engulf
    - All chemoreceptors in a cell colony now function instead of only the lead cell's chemoreceptors working
    - The spawn algorithm for filling the area around the player now only spawns up to 80% of the entity limit to allow the sector spawning logic more chances to work
    - There's now a warning icon on the editor finish button if ATP is negative or there's an inprogress action that needs to be finished before exiting the editor
    - Chunks and projectiles are now shown in the mouse hover panel (inspector)
    - Added music tracks for the existing prototypes and upcoming ones, they can already be listened to in the art gallery
    - The day/night cycle light level in the editor now defaults to current value to match the gameplay time of day
    - Light levels now smoothly change in the editor when switching the time of day
    - Organelle upgrade GUI now shows adjusted MP costs correctly, instead of just always showing the absolute costs
    - Added a proper icon for the cilia pull upgrade to replace the placeholder one
    - Iron is now shown in the patch compounds graphs
    - "Added 2 new multicellular prototype organelles: axon and myofibril (for future use)"
    - Auto-evo prediction being calculated now shows a waiting icon
    - Entering the prototypes is now prevented with a controller as the prototypes don't have any focus on controller usability
    - Preview cells in the editor now don't create collision shapes which makes game performance better in the editor
    - Patch map display now starts off centered on the current patch instead of always panning to it when opening
    - Patch map tooltip, for how to move it, now takes a few more seconds to appear in order to be less annoying
    - New game setup menu is now more clear what the buttons do (back is no longer visible while in advanced view)
    - Improved the process speed indicator icon in the process panel
    - Microbe movement tutorial now has extra smoothing in how the movement direction prompts rotate
    - Added a new debug panel showing player current coordinates and mouse cursor world position
    - More elements in the Thriveopedia now react to language change
    - Fixed seafloor patch background image artifact (this had been a problem for years)
    - Fixed a visible seam in cell wall textures that was caused by the membrane generation code
    - Fixed a bug introduced in previous release where organelle tooltip process numbers did not react to patch change (photosynthetic organelles were the visible place where the issue was visible)
    - Fixed new game menu not wrapping text which could cause long translations to push settings sliders offscreen
    - Fixed the current resolution display in the options menu not always updating when toggling fullscreen mode
    - Fixed popup window close buttons not having a visual style for the focused state, which caused it to appear like no GUI element was focused in a popup when the close button was focused
    - Fixed the membrane disappearing for really thin and long cells
    - Fixed engulfed tutorial appearing even when the player could not be ingested
    - Fixed crashing when changing language after having visited the art gallery screen
    - Fixed editor tab buttons being too wide and overlapping the light level bar
    - Fixed temperature "compound" being incorrectly shown in the patch compound statistics graph
    - Fixed uneven main menu buttons with long translation texts, all buttons now stretch to the same width when one translation doesn't fit
    - Switched world settings text to use safe string format to ensure it can't crash the game due to translation mistakes
    - Removed classic patch map option as it had bugs specific to it and it was not going to get anyone to maintain that code to be compatible with new features
    - Reworked our custom popup window handling, organelle popup menu now has animations for opening and closing
    - Microbe digestion code now only runs 30 times per second to use a bit less performance
    - Removed saving of usefulCompounds in a compound bag as that data can be regenerated very easily and it increased save sizes unnecessarily
    - Our input system now throws an exception when registering a duplicate listener object, this will help in developing the game by catching that mistake much sooner
    - Improved the features of our GUI focus grab system
    - Improved the usage and internal features of our custom tooltip system
    - Refactored the species details panel and fossilization dialog internally to be more reusable
    - Simplified our game entering code to call the same function from more places
    - Improved our code settings class to prevent some potential mistakes
    - Added a safety check against an unimplemented feature in our save data loader
    - Wrote a document describing our saving system
    - Removed some old files and fixed a broken link in the repo docs
    - "Updated our used compression library SharpZipLib to 1.4.2, this required switching our GZip handling to use the C# standard version to avoid a bug that broke saves with the new library version. Warning: there's still an intermittent save loading and creation bug (see: [#4156](https://github.com/Revolutionary-Games/Thrive/issues/4156))"
    - Updated Netanalyzers library version to 7.0.1
    - Updated our used JSON library to version 13.0.3
    - Updated YamlDotNet to 13.1.0
    - Updated some check tool package dependencies
    - Updated our code checking tools version
    - Updated translations

0.6.3:
  IntroductionText: |
    This release adds all of the remaining prototypes for game stages that weren't ready in time for the previous release. Besides those there are a bunch of small fixes and feature improvements for the microbe stage and general GUI parts. This is a bit of a smaller release due to not many active volunteers and a lot of time has been spent in preparation for a game performance rework which will hopefully be in the release after this one.
  ReleaseLink: https://github.com/Revolutionary-Games/Thrive/releases/tag/v0.6.3
  PatchNotes:
    - "Added the remaining prototype stages: industrial, space, and ascension. It is now possible to play through the skeleton of the game all the way from microbe to ascension, though the later prototypes have bare minimum content to show off the ideas of the stages."
    - Downgraded our compression library (SharpZipLib) to 1.3.3 which should resolve the intermittent save errors that have been happening the past few months
    - Added a new toxin damage sound (instead of reusing the emit sound)
    - Improved the placeholder tree and rocket graphics for the prototypes
    - Save error dialog now explicitly tells to give us the JSON debug log as without it debugging a save failure is basically impossible in most cases
    - Added a system for window panels to reorder this makes draggable windows go on top of other such windows when they are moved around or opened
    - Added a new feature to the museum screen to delete fossils
    - Fossil saving failure will now show an error popup
    - Added miscellaneous fun screen filter shaders
    - Added an unknown key icon
    - Fixed game not fading out before playing the microbe intro video
    - Fixed 3 microbe backgrounds having non-repeating edges
    - Fixed current patch biodiversity fill always checking potential species to split from in a specified order (the order is now random)
    - Fixed some usages of random number generation having their upper limits be off by one
    - Fixed player accidentally becoming awakened if entering macroscopic while already having placed neurons
    - Fixed the ESC key icon not being used (instead the unknown key fallback was used before)
    - Fixed sometimes the close X being invisible on our custom windows
    - Fixed the Thrive logo being blurry in the main menu and the credits
    - Options menu now lazily loads available language list
    - Switched a BOM check around to make dependabot tool updates work
    - Automatic checks now disallow gltf files as they are always worse than .glb files
    - Updated the style_guide on how to add words to dictionary to avoid typo warnings
    - Cleaned up some remaining references to ruby in the repo
    - Fixed a typo in CONTRIBUTING.md file
    - Updated AngleSharp library to 1.0.4
    - Updated a code checking library we use
    - Added support for Godot GUI tab names to be translated
    - Updated translations

0.6.4:
  IntroductionText: |
    This release focused on the massive refactoring of the gameplay code to an ECS architecture and a different physics engine. That took up the vast majority of the time, and there's still probably new bugs caused by those changes in this release. Still some potential performance improvements couldn't be finished in time, but will be looked at in the future to hopefully get even a bit more performance than these good performance gains. There were a few new features developed by contributors for this release.
  ReleaseLink: https://github.com/Revolutionary-Games/Thrive/releases/tag/v0.6.4
  PatchNotes:
    - Refactored the entire microbe gameplay code to use an Entity Component System (ECS) architecture and a different physics engine (Jolt). This took up the vast majority of the time spent on this release. As a result of this many things in the game will feel slightly different and there will definitely be new bugs that have slipped past us. We will attempt to quickly fix any new bugs introduced with this change.
    - The game performance is now 20-100% better than before thanks to the ECS and physics rework (different benchmark parts have different improvements, and different gameplay conditions also have different performance gains) 
    - Improved auto-evo performance by about 50%
    - Added a native C++ library for Thrive that has the physics engine integration for now but we can in the future move computation heavy parts of the game there that might benefit performance
    - Added two new context specific microbe tracks that can play instead of the normal microbe ambiance when in those specific patch types
    - Added Thriveopedia pages for each of the organelles currently in the game
    - "Fixed 2 very often reported multicellular crashes: InvalidOperationException: Sequence contains no matching element and ArgumentException: OrganelleTemplate can't be placed at this location"
    - When low performance is detected in the menu the game will now prompt the player to disable the 3D menu backgrounds
    - Improved the visuals of the organism statistics panel and added / updated related tooltip icons as well
    - Chemoreceptor can now be upgraded to detect cells of a certain species
    - Added vacuole upgrade to specialize it for a certain compound. Specialized vacuole stores double the normal amount of the specialized compound but provides no storage for other compounds.
    - The pilus now applies damage based on the physics penetration amount instead of always a fixed value. Faster collisions result now in more physical damage.
    - The pilus can now be upgraded to an injectisome to switch the damage to be toxic (instead of physical) and also to apply the full damage no matter how light the hit is
    - Microbes now use the physics engine to turn which should result in reduced rotation related bugs or slight issues
    - Microbe physics shapes are now a single convex body which performs better and it much more closely matches the visual size of the membrane
    - Microbe colony physics shape is now a single combined body. This should fix rare bugs with pili detaching or toxins hitting self when firing them.
    - Multicellular colonies now use absolute positioning of members set by the editor. This isn't perfect (leaves gaps) but the problem with cells growing at the wrong positions randomly should be gone now.
    - Membrane data generation now happens in a background thread to reduce stuttering happening while cells spawn
    - Added a tutorial for negative ATP balance
    - The AI will now most of the time not try to engulf something it cannot digest
    - The AI will now remember what it was doing before a save thanks to the component data being easier to load fully intact
    - Added 3D panorama backgrounds for various patch types for the late multicellular underwater part. These were completed a while ago but were never accessible in game until now.
    - There's now a basic page name search in the Thriveopedia
    - Improved initial compound handling for multicellular colonies
    - There's now a tutorial for the become multicellular button as many players seemed to not realize it was a button
    - Duplicating a cell type now selects it in the early multicellular editor
    - Becoming multicellular now has a timeline entry for permanent record when it happened
    - Added early multicellular freebuild mode
    - Organelle chunks that are dropped now stop playing animations (for example flagellum swim animation)
    - Fixed the most often reported crash, which was likely due to Godot integration with Bullet physics, by switching physics engines
    - Fixed subshape out of range errors from physics also thanks to entirely redoing the gameplay physics
    - Fixed the osmoregulation editor tooltips not updating based on the difficulty and current membrane
    - Fixed the AI shooting too early at a target it wasn't pointing at yet due to rotation no longer being almost instant
    - Fixed bug with glucose reduction showing up sometimes as NaN
    - Fixed the global timeline not showing populations correctly
    - Fixed a bug with incorrect resulting MP in early multicellular from incorrectly calculated actions on separate cell types
    - Fixed saving bug with ObjectDisposedException with HostileEngulfer
    - Fixed an exploit with deleting and duplicating cell types giving infinite MP
    - Fixed a crash when double clicking on organelle move
    - Fixed organelle popup menu not being tall enough with certain languages selected
    - Fixed symmetry trying to place multiple unique organelles
    - Fixed a crash when loading a save while load was already in progress (the new load is now prevented until the previous save/load operation completes)
    - Fixed the auto-evo exploring tool map not panning to show the selected patch initially
    - Fixed keyboard navigation in input options
    - Added one more fix (the 4th) now against accidental cannibalism (when turning multicellular)
    - Added multithreading to microbe growth, made easier thanks to the ECS architecture
    - Improved externally positioned organelles to use much less CPU time
    - Various disposed object exceptions should no longer be possible to happen with the gameplay no longer using Godot Nodes to implement it
    - Player cell related change callbacks now use invoke to trigger to reduce the chance of a rare bug triggering with them
    - Failure to delete a save should now give a popup warning about the error
    - Art gallery slideshow now works for models as well as images
    - Added a new separate icon for oxytoxisome to no longer use the toxin vacuole icon
    - Added a new icon for osmoregulation
    - Photostudio is now slightly faster at creating images of cells
    - Switched the early multicellular editor to use images of cells instead of cell objects for showing the body plan. This improves the performance a ton when there were large body plans being edited.
    - Tweaked the colour of the editor confirm button warning badge to make it more consistent with the other GUI
    - Fixed some situations where the editor confirm button warning got stuck on
    - Added new cheat in the microbe cheat menu to control the current time of day
    - Improved the handling of creating organelle upgrade actions / changes in the editor
    - The GUI no longer grabs focus during intro video to reduce chance of accidentally interacting with the menu while the video is playing
    - Fixed art gallery filter categories not reacting to language change
    - Species colour not applying to all organelles problem should now be fixed due to the component architecture where all organelles should read the consistent colour values that are copied
    - Organelle graphics are now slightly more colourful and pop out against the membrane more
    - Some microbe colony related corner cases are no longer relevant, but there's undoubtedly new bugs still left to fix with the newly redone system
    - "Steam: fixed username display not reacting to language change"
    - "Steam: fixed bug with displaying library licenses"
    - Split microbe HUD to its own scene to have better organization of the microbe stage
    - Moved enzyme descriptions to our JSON files to no longer have hardcoded descriptions in the code per enzyme type
    - Improved internal organelle position code to use read only data references when the data should not be modified. Same improvement was also made to some simulation parmeters data that was also returned as modifiable objects.
    - Git submodule info (current commits) is now included when packaging the game
    - Created a system to distribute precompiled native libraries for Thrive to more easily setup the new version for partial development
    - Updated code checking tools version
    - Updated YamlDotNet from 13.1.1 to 13.7.1
    - Updated Microsoft.CodeAnalysis.CSharp from 4.6.0 to 4.7.0
    - Updated AngleSharp from 1.0.6 to 1.0.7
    - "Added new languages: Bengalian, Belarussian, and Macedonian"
    - Updated translations

0.6.4.1:
  IntroductionText: |
    Here is a patch release to fix most of the serious problems found in 0.6.4 after the release and improve the game balancing. After this there's only some minor issues left from the ECS architecture refactor. There's only a few kind of new features in this release: panorama backgrounds for late multicellular editor and some better tooltips.
  ReleaseLink: https://github.com/Revolutionary-Games/Thrive/releases/tag/v0.6.4.1
  PatchNotes:
    - "Balancing improvements: movement speed for larger cells was increased a bit, bacteria can now again spawn in larger swarms than just 2 at once, and debuffed colony movement bonus a bit to make sure colonies aren't faster than individual cells."
    - Added better tooltips for microbe action hotbar and become macroscopic button
    - Added panoramic 3D backgrounds for late multicellular editor. Before they were used just for the stage itself.
    - Fixed cells not appearing at all when using low thread count. The same root cause also caused cell rotations to stop working after some time in the game.
    - Hexes placed in previous editor session are now slightly darker to make them actually visually distinct
    - Engulfing animation now correctly stars from the engulfed object's world position
    - Fixed eukaryotic size bonus for engulfment not working
    - Fixed new health max not applying after exiting the editor
    - Fixed engulfing pulling in animation playing twice in a row
    - Fixed engulfing endosome graphics scale blowing up a ton when engulfing a specific object type
    - Fixed engulf eject animations not working at all
    - Fixed a crash related to despawning engulfed objects
    - Fixed a save error when a species had a chemoreceptor set to detect that species it was in
    - Fixed incorrect data being generated for multicellular body plan indexes which lead to a crash when colonies regrew lost cells
    - Fixed tutorial about leaving colony to be able to enter the editor being able to trigger in early multicellular stage
    - Fixed the reproduction bars staying white if the player died when the editor was available. Also with the same change compound bars will only update while the player is alive.
    - Fixed softlock when pressing the editor button but the player was in a microbe colony (not multicellular)
    - Fixed Godot warning that was printed when the editor was exited (this was from the options menu sound device list)
    - Fixed a Godot error when shutting down the game that was caused by PhotoStudio
    - Mostly fixed microbe colony member positions. Members bound 3-4 cells away from the lead cell still have some rotation and positioning issues.
    - Made multicellular lost cell tracking ignore cells that no longer pointed to a valid cell index in a species' body plan. Most likely caused by removing cells from the body plan after that cell colony was spawned.
    - Going to the art gallery now disables the 3D menu background performance tracking which should fix unintentional low performance detection due to a lag spike
    - Removed old evolutionary tree build error message that should not be able to trigger anymore as we have had a save breakage point
    - Made speed cheats work much better, especially for larger colonies which got way too much bonus speed
    - Unified the cases of our JSON files, properties are now PascalCase everywhere (with internal names still keeping camelCase naming)
    - Fixed native library symbol upload script
    - Updated Nito.Collections.Deque from 1.1.1 to 1.2.1
    - Updated translations

0.6.5:
  IntroductionText: |
    With this latest release the game performance is improved even further and memory allocation count is optimized. This is the final release for now trying to improve the game performance. Even though the main focus was on performance again there are plenty of other fixes and improvements. The big 2 new features this time are the fog of war for the patch map and organelle unlocks.
  ReleaseLink: https://github.com/Revolutionary-Games/Thrive/releases/tag/v0.6.5
  PatchNotes:
    - Implemented fog of war for the patch map, you now need to explore the map to find all the patches that exist
    - Added part unlock system. Some organelles are now locked until the player fulfils certain conditions.
    - Added multithreaded running of ECS systems. This improves the performance a bit more on systems with enough CPU cores.
    - Reduced memory allocations during normal gameplay by 75%
    - Auto-evo prediction now shows the gained energy first and population second
    - Hovering over a species name in the editor report now shows an image of the species in a tooltip
    - Added button to eject all engulfed things, helpful when you have ingested too poisonous prey
    - Thriveopedia now has inter-page links and external links
    - Added a button to open an organelle's Thriveopedia page when hovering over the organelle
    - Added multiple new microbe stage tutorials and reworked many existing ones as well as changed the tutorial flow in the editor
    - The initial tutorial message is now customized based on the life origin selected in the new game options
    - Added a new microbe stage music track that is exclusive to the vents biome
    - Reduced bacteria swarm spawn counts for larger bacteria to try to balance large swarms of killer bacteria that clear out all smaller species
    - Reimplemented pilus damage stab cooldown when dealing large amounts of damage at once, hopefully to prevent ejected cells from very quickly killing their engulfer
    - Previous gathered energy is now shown in the prediction tooltip for comparing to see how much the increase/decrease is
    - Did some further small system tweaking based on profiling for a bit more performance
    - Increased minimum entity counts a bit now that we have more game performance
    - Reduced density of big iron chunks to make them pushable by cells again
    - Fixed big iron chunks having their collision models rotated differently than the visual modes (this caused the visuals to now be rotated differently than before until someone can remake the model)
    - Added explicit check for available CPU features and making the game exit cleanly if the current CPU is not new enough. This is implemented through a small library which is loaded first and only after confirming things are good loading the main native code of Thrive is done.
    - Improved the handling of native library load not succeeding and the game needing to close (this shouldn't be a hard crash anymore)
    - Made compound cloud creation use interlocked operations rather than locks to slightly improve performance
    - Added middle mouse button for panning to the list of rebindable keys
    - Middle mouse button can now be used to pan in the society stage
    - Made the move and delete hotkeys work for macroscopic editor
    - Late multicellular speed now depends on the amount of myofibril metaballs
    - Added a cheat for unlimited growth speed
    - Cells now stop emitting mucilage when joining a colony, this should fix a really old reported bug
    - Tweaked auto-evo prediction GUI a bit to give more horizontal space for numbers
    - Fixed bug with colony member attach positions sometimes being incorrect which has been a bug for a really long time (note that this is different from multicellular body plan change bug)
    - Fixed engulfing used storage not taking things currently being pulled in into account leading to overuse of storage and ejection
    - Fixed engulfing not taking targets being in colonies into account, now the lead cell is no longer always yanked out of a colony
    - Fixed regression in previous Thrive version with multicellular growth buff not working leading multicellular growth to be half the intended speed
    - Fixed regression in entering engulf mode in a colony where other members could engulf but the player couldn't
    - Fixed editor button not re-enabling after exiting a colony
    - Fixed some bugs related engulfable being stuck with 0 contents, at least infinite toxin damage should be fixed
    - Fixed a crash when accessing incorrect cell colony member index due to one missing "=" character in the code
    - Fixed Thriveopedia map not displaying if opened before going once to the editor
    - Fixed slime jet activation only playing a single frame of animation, now a full animation cycle is always completed
    - Fixed bug with visual system setting Godot scale directly when a separate system should be doing it
    - Fixed microbe sound effects continuing after cell death
    - Fixed mouse click not working regression in signaling agent command wheel
    - Fixed toxin projectile visuals not loading properly from saves
    - Fixed fossilise buttons not updating their state when a species was fossilised, now the buttons correctly show the species as being fossilised
    - Fixed bugs with body plan editor and cell editor displaying their graphics at the same time
    - Fixed the 3D environment colour leaking into the cell editor in multicellular editor (the background is now disabled while in the cell editor and enabled when returning)
    - Fixed saving not working in the editor if a save made in the editor was loaded and the stage was not entered in between
    - Fixed an error being triggered when exiting from a save loaded in the editor without going to the microbe stage before quitting
    - Fixed the metrics panel entity counts not making much sense with the ECS changes
    - Added option to turn off the multithreaded world simulation in case it is slower or has other issues
    - Added new setting to control the number of native executor threads (affects physics performance)
    - Added some more models to the list in the gallery
    - Added some extra safety checks to task executor based on one recent crash report
    - Added some safety code to ensure ejected cells will despawn in a few seconds if they are dead
    - Added safety code against entities being stuck in dead engulfers, instead the engulfing state is now properly cleared
    - Added safety checks in editor enter button state apply to ensure the player hasn't died during the one frame it takes for the state change to apply after it is triggered
    - Added code to force all cells into normal mode when they are engulfed to make sure engulfed cells can't be in weird states
    - Added a check to ensure gas compounds add up to 100% in biomes
    - Made the benchmark get progressively more intensive to ensure it should always eventually end
    - Removed protoplasm from the game, it was an old buff for AI bacteria cells
    - Removed a few unnecessarily saved fields from save files
    - Added debugging feature to draw debug lines easily
    - Added debugging helpers for verifying ECS component access patterns
    - Wrote an overall Thrive ECS architecture describing document
    - Implemented dependent entity delete for future use in Thrive
    - Added .mo files to gitignore to stop people accidentally sending those in PRs
    - Updated our scripts to run on .NET 8
    - Fixed a few problems in the setup instructions (.NET 8, gold linker), added more info on submodules
    - Updated code style rules and checking tools
    - Added a styleguide section on avoiding memory allocations
    - Removed unused code constants
    - Renamed an interface in the code to clarify its purpose
    - Renamed UsedIngestionCapacity to UsedEngulfingCapacity in the code to improve clarity
    - Setup dependabot to automatically update our git submodules
    - Some native side code build options improvements
    - Applied our single letter LINQ lambda style across the codebase
    - Updated AngleSharp from 1.0.7 to 1.1.0
    - Updated YamlDotNet from 13.7.1 to 15.1.1
    - Updated Jolt physics engine
    - Switched translation files to no longer have source reference lines, this should reduce merge conflict amount massively, but most translation tools don't know how to look at the translation template file to find the reference line information
    - Updated translations

0.6.6:
  IntroductionText: |
    We have upgraded Thrive to use Godot 4. This huge engine upgrade has caused a lot of problems that we have been busy fixing. Most of the problems have been fixed but there are still some minor remaining unintended changes. This release doesn't have many new features due to the time taken to convert to Godot 4 as it had a lot more breaking changes and slightly different behaviour causing new bugs than expected. This release also now requires a Vulkan capable GPU for optimal experience. Thanks to better library loading support this release no longer requires AVX support from any CPU trying to run Thrive (there is now a separate native library included that doesn't use AVX).
  ReleaseLink: https://github.com/Revolutionary-Games/Thrive/releases/tag/v0.6.6
  PatchNotes:
    - Implemented fog of war for the patch map, you now need to explore the map to find all the patches that exist
    - Updated to Godot 4.2.2 (we were previously on 3.5 so this is a massive upgrade)
    - Updated to .NET 8 runtime and C# 12 as it turns out this can be used with Godot 4
    - New engulf animation that creates wave lines instead of the old just flashing blue animation
    - Oxygen now has different levels in different patches which affects the utility of certain parts a ton
    - There's now a native library variant that doesn't require AVX, this should make Thrive playable again on some older CPUs
    - Arabic fallback font had to be removed as it caused buggy line heights in all text in Godot 4
    - Osmoregulation cost values are now shown in red as it is a negative property
    - Engulfment storage full tutorial now has an end trigger once the player has digested enough things
    - Fixed new player species name not immediately applying after exiting the editor
    - Fixed new cell button crashing multicellular freebuild editor
    - Fixed data cache disposed errors that only seemed to trigger in exported version of the game
    - Fixed no changes in editor tutorial being able to prevent multicellular editor exit
    - Memory usage metrics now works on Windows
    - Fixed CPU check only checking AVX and not AVX 2 which was then used anyway causing a crash on CPUs that have AVX but not AVX2
    - Switched the AVX feature check to use standard C# function, which is hopefully more accurate than the previous approach that we got reports about false negatives
    - Tweaked wording on the fallback opengl renderer use and disabled the 3D backgrounds again for that as they still aren't fully correct
    - Updated our colour picker customizations for Godot 4 (pick from game window seems to not work currently on Linux)
    - Removed our custom checkbox implementation now that Godot's has all the needed features
    - Switched from the previously used tar compression library to C# standard one which shouldn't have any save corruption issues (due to this we were stuck on an old version of the compression library)
    - Added check to tools against omitting part of a version number this removes potential for a mistake that almost was in 0.6.5
    - Added simple C#-code-only unit tests for a few things
    - Converted some things to use direct references instead of NodePaths
    - There's now a nix flake for Thrive developers
    - Updated our documentation impacted by the upgrade to Godot 4
    - Updated Jolt physics engine to newest version
    - Updated YamlDotNet fro 15.1.1 to 15.1.2
    - Updated AngleSharp from 1.1.0 to 1.1.2
    - Updated code checking tools version
    - Updated translations

0.6.6.1:
  IntroductionText: |
    This is a quick patch release to address some of the biggest issues with the previous release. This doesn't fix every single issue report we got after 0.6.6 as many of the issues still don't have known root causes and wouldn't be easily fixable in a small amount of time. The biggest visible things are the fixed organelle models as well as fixing the size and position of many GUI elements.
  ReleaseLink: https://github.com/Revolutionary-Games/Thrive/releases/tag/v0.6.6.1
  PatchNotes:
    - Fixed organelle models looking bad in Godot 4
    - Improved the visuals of the chemoreceptor and tutorial lines
    - Turned off compression on the clouds perlin noise texture which was accidentally turned on with the Godot 4 update
    - Did some minor organelle visuals tweaks
    - Organelle placement sound is now only played if a placement action was done (fixes it being played for organelle removal)
    - Fixed evolutionary tree zooming in and out not working correctly
    - Fixed screen effects in miscellaneous settings not working
    - Fixed win and extinction screens
    - Fixed various GUI popup related problems in the later prototypes
    - Increased audio latency to 20ms which helps crackling audio if the game was running slightly too slow
    - Added extra error handling to Thriveopedia load and save load against scene load failures which seems like a randomly occurring bug in Godot 4 engine itself
    - Added extra safety checks around native library load and printing of current CPU name if it is not detected as sufficient for running Thrive
    - Added extra checks to our simulation running code to maybe start to narrow down a few bugs
    - Redid modal manager connect and check operation to hopefully fix one case of signal connection errors printed in Godot 4
    - Fixed position of our links popup in the main menu
    - Other GUI fixes
    - Added hyperthreading throttling instructions to our busy-wait loops
    - Our CI builds system works again
    - Updated our automated code checks to work on Windows again
    - Removed trailing spaces in shaders that Godot did automatically
    - Added game export script flag to ignore problems with installed Godot to just try to export anyway
    - Updated Nix flake to use Godot 4.2.2
    - Updated xunit from 2.7.1 to 2.8.0
    - Updated translations

0.6.7:
  IntroductionText: |
    Here is a release full of new features to make up for the previous few releases that were light on new features. The main 3 major new features are: endosymbiosis, day/night cycle enabled by default, and toxin customization. These add much more variety to the microbe stage and hopefully make the game significantly more enjoyable. Endosymbiosis allows you to create an endosymbiont organelle from another species giving a free copy of that organelle and unlocking placing that organelle. Day/night cycle has been polished up with some new GUI features in the editor to make it easier to determine if you can survive the night and as such is now enabled by default. The toxin customization feature allows using different toxin types that have different effects for more interesting toxin gameplay. Besides the major features we also have a variety of smaller changes and bug fixes (including one fix for the game freezing during gameplay).
  ReleaseLink: https://github.com/Revolutionary-Games/Thrive/releases/tag/v0.6.7
  PatchNotes:
    - Implemented endosymbiosis. It is now possible to engulf other species to turn them into free organelles and also to unlock those organelles in an alternative way compared to the normal unlock conditions.
    - Added customization for toxin organelles to select various toxin types that have different effects than oxytoxy
    - Added different colours for different toxin types
    - Day/night cycle is now enabled by default but can still be turned off
    - Added ferroplast organelle, which is the eukaryotic variant of rusticyanin
    - Cells spawning close to night time (or during night) get extra resources to help them survive the night
    - Buffed cell corpse chunks
    - Added alternative unlock condition for oxytoxisome that unlocks it after dying multiple times, this models how prey species can become toxic instead of only predator species having access to toxin
    - Added custom inventory item drag icons and updated land tree placeholder model
    - Fixed auto-evo mutations code using exceptions for normal flow control, this fixes at least one identified case where the game would freeze completely
    - Fixed compound bars when max storage amount is less than 1
    - Fixed fluid currents system force not applying, this bug was likely present ever since the ECS refactor
    - Fixed iron chunk collision model scaling and fixed their rotation differences compared to the visual models
    - Fixed HUD messages font shadow not working
    - Fixed a brief flash of the game when exiting the freebuild editor for the first time
    - Fixed multiline text edit style not working correctly
    - Fixed cheats being able to enable the editor button when already going to the editor which allowed causing a crash in the game by clicking the button again
    - Fixed some problems related to multicellular species trying to enter binding mode
    - Made AI cells that depend on resources that aren't present during the night be more sessile during it
    - Added new GUI and warnings to the editor to show if storage space and compound production during the day is enough to survive the night for photosynthesisers
    - Added a display in the editor showing how long each compound takes to fill up, this will hopefully help in planning for how to survive the night with enough resource generation during the day
    - Made auto-evo consider surviving the night more to penalize species with not enough storage or resource stocking up during the day
    - Created a new custom model for ice chunks to be separate from the particle effects also present in the patch
    - Added support for organelle upgrades overriding the base model of the organelle, which will be used more in the future
    - Added custom model and icon for injectisome upgrade
    - Added custom physics time to metrics panel, this feature was done last December but somehow forgotten to be added until now
    - Added support for loading more shape types to our physics engine integration in preparation for use with organelle shapes
    - Created custom collision shapes for all organelles to finally properly fix them
    - Tweaked glucose reduction effect code a tiny bit to be clearer
    - Made orphaned node count in metrics panel ignore intentionally cached nodes
    - Improved organelle model data handling to keep model path variables and scenes in a single data container to avoid future mistakes with mixing up data for different scenes
    - Fixed some code warnings and fixed a bug in metaball moving that this uncovered where the parent metaball reference was not updated correctly
    - Removed unused thermoplast mesh file
    - Updated Jolt Physics engine
    - Updated YamlDotNet from 15.1.2 to 15.1.6
    - Updated xunit from 2.8.0 to 2.8.1
    - Updated code checking tools
    - Updated translations

0.6.7.1:
  IntroductionText: |
    This is a quick small patch release to fix a few major issues that were resolved since the last release. The most major fix is that many more older CPUs should be able to run Thrive now. This problem was caused by a build configuration setting unintentionally targeting much newer CPU instructions than intended.
  ReleaseLink: https://github.com/Revolutionary-Games/Thrive/releases/tag/v0.6.7.1
  PatchNotes:
    - Changed compilation options for the fallback native library that should now work on older CPUs that only have SSE 4.2 and no newer instructions
    - Fixed the game getting stuck when selecting 32 native executor threads
    - Re-enabled Harmony mod loading as this no longer seems to cause the game to get stuck on start up with Godot 4
    - Reduced unnecessary StringName allocations related to key prompt icons and checking pressed inputs 
    - Updated YamlDotNet from 15.1.6 to 15.3.0 
    - Updated Jolt Physics Engine version
    - Updated translations

0.7.0:
  IntroductionText: |
    This release marks the completion of the 0.6.x roadmap. Next up we'll be working through the items on the 0.7.x roadmap. For this release the major features are a new auto-evo algorithm based on miches that should generate much better AI species, and there's now a convolution surface algorithm which gives macroscopic creatures a "skin" in the prototypes. There's also a lot of smaller new features and tweaks to the microbe stage as usual. The last roadmap items to be completed where engulfing balancing and fixing as well as allowing continuing as a related species in easy mode.
  ReleaseLink: https://github.com/Revolutionary-Games/Thrive/releases/tag/v0.7.0
  PatchNotes:
    - Added a completely new auto-evo algorithm based on a miche algorithm. This should massively improve the species auto-evo generates.
    - Added convolution surfaces to add "skin" to macroscopic creatures to no longer display them just as a collection of metaballs
    - Added sprinting ability to get a quick burst of speed
    - Updated the compound cloud visuals with a new shader for more textured look
    - Added new environmental chunks that emit phosphate
    - Added feature to command the player species to migrate to new patches without the player having to move themselves
    - Added mucocyst upgrade for slime jet which turns it into a defensive shield
    - Added option to switch to a different species on extinction in easy mode instead of getting a game over
    - Added a red screen flash as indicator for the player taking damage
    - Added customization of toxin toxicity, which allows selecting between more damage per single shot or faster fire-rate
    - Increased toxin initial velocity a bit
    - Made cell turning speed ramp up much much faster when not pointing at the cursor. This makes the strategy of needing to overshoot the  cursor past the direction you want to point at for maximum turning speed unnecessary.
    - Microbe AI can now move sideways when trying to reach chunks or other cells
    - Fixed eukaryotic engulfing size multiplier to be 2 instead of 1.5
    - Prokaryotes now drop smaller cell chunks that are easier to eat
    - Buffed dropped cell chunks to have 3x more compounds in them
    - Added a cap to how many chunks a dying cell can drop to prevent absolutely massive cells causing issues
    - Entering engulf mode without ATP is now possible at the cost of a little bit of health
    - Added pilus damage cooldown on ejecting something to prevent ejected cells from immediately dealing massive amounts of pilus damage
    - Increased maximum chunk count a bit to hopefully help with visual despawning
    - Added buttons to the process panel to toggle individual processes on or off
    - Cell colony members now forward messages to the HUD, which for example, allows indigestibility messages to be forwarded to provide info to the player as to why they can't eat something while in a colony
    - There's now a few second cooldown before health regenerates after taking damage
    - Added experimental siderophore feature that reworks iron gameplay to make it require shooting projectiles at big iron chunks to break off small chunks to then eat them
    - Added a basic process panel view to the editor
    - Added slider to resize metaball to be placed in the macroscopic editor
    - Added simple X-axis symmetry mode to the macroscopic editor
    - The prototype rocket launch animation now approximates an orbit entering manoeuvre instead of going straight up
    - Tweaked when the low performance warning is triggered
    - Fixed a bug where engulfed objects can get stuck in an incorrect state (entities in incorrect state are now force ejected)
    - Fixed bug with the events timeline clearing wrong parts of the timeline after 20 generations
    - Fixed organelle icons being cutoff in the Thriveopedia
    - Fixed species preview tooltips not working in auto-evo explorer
    - Fixed species preview tooltips not working in the timeline tab
    - Fixed input keybindings menu not showing modifier keys along with graphical key representations
    - Fixed slight visual artifacts with mixing clouds near the screen edges
    - Fixed mouse hover panel checked world position under the cursor not taking our distortion shader into account (chromatic aberration option)
    - Fixed various aspects of main menu 3D backgrounds 2 and 3
    - Fixed multiple places in the editor where too long translations caused issues
    - Fixed one 3D background having a particle emitter set to update at a limited framerate
    - Fixed not being able to rebind inputs to CTRL, Shift, and ALT
    - Fixed bug with rebound keys not displaying in key prompts correctly
    - Fixed species colour not applying to all strands of cilia
    - Fixed editor timeline global and local buttons being pressable at once
    - Fixed word wrap not being enabled for auto-evo prediction panel, which caused issues with too wide GUI controls in some languages
    - Fixed radial selection menu text being offcenter
    - Fixed bug with editor button staying active while going to a later stage
    - Thrive now prints the time when the game is started to log files
    - Reduced memory allocations in microbe mutation generation
    - Added a shader for iron chunk depletion and slightly updated the iron visuals in general (this is unused currently but is planned to be used in the future)
    - Removed old auto-evo configuration options that are no longer used
    - Made key prompts queue a refresh on data change instead of loading an updated icon immediately
    - Wrote code documentation for BiomeCompoundProperties
    - Added backend support for LAWK-locked organelles to be handled by the endosymbiosis system
    - Updated some of the code README file badges
    - Updated YamlDotNet from 15.3.0 to 16.0.0
    - Updated code checking tools version
    - Fixed our shader code check not working properly after the Godot 4 upgrade
    - Removed old mutation code that the new auto-evo no longer uses
    - Improved our threaded run generation script error messages
    - Added TODO comments to a few places we could use graphics pooling as new graphics instance creation is one of the heaviest parts of the game in terms of performance currently
    - Added more instructions regarding gettext to our setup instructions
    - Updated translations

0.7.1:
  IntroductionText: |
    This release brings dynamic oxygen levels to the world that are produced once photosynthesis evolves. We also got a lot of graphics tweaks, and even new experimental graphics effects that can be turned on in the options. And those aren't the only very visual changes as the editor GUI got multiple improvements to give better insight into what auto-evo and cell processes are doing. This release completed most of the 0.7.x release roadmap but a few items couldn't be completed in time so this release was not called 0.8.0, which is now planned to be the version number of the next release.
  ReleaseLink: https://github.com/Revolutionary-Games/Thrive/releases/tag/v0.7.1
  PatchNotes:
    - The world now starts off with no oxygen and photosynthesis, once evolved, will add oxygen to the world. This effectively locks many organelles that require oxygen during the early game.
    - Created a new much more graphical auto-evo report screen
    - Implemented the food chain tab in the editor
    - Added 3D membranes for microbes
    - Improved the Thriveopedia with various new pages
    - Converted the old help menu to open a relevant Thriveopedia page with links to important pages
    - Upgraded to Godot 4.3
    - Added a microbe background distortion shader effect that can be enabled in the options (this may become the default in the future)
    - Added an experimental bloom effect that can be enabled
    - Added mesh subdivision for the convolution surfaces to make them look better
    - Metabolosomes are now locked until reaching a patch with oxygen
    - Added hydrogenase as an early game glucose to ATP converting organelle
    - Switched default toxin type to cytotoxin and modified the toxin creation process to not always require oxygen
    - Renamed oxytoxy to just toxin in general toxin contexts where other toxin types are also used
    - Iron respiration no longer requires oxygen to keep it viable in the vents biome
    - Added an upgrade for flagellum for picking between long and short variants that have different energy cost and speed
    - Added a new music track for the tidepool biome
    - Added a new music track for the ice shelf biome
    - Buffed engulfing resource gain
    - Increased engulf size requirement for big phosphate chunks
    - Added multiple new ice chunk types for more variety
    - Made AI wait behaviour not trigger as much when out of just one compound type to reduce unnecessary AI sessility
    - Added resource limiting mode for the ATP bar to view what would happen if some resource was missing from the cell storage
    - Increased opacity of microbe membranes
    - Added a new bump map for the microbe membranes
    - Changed membrane bump map UVs to not distort with the membrane animation
    - Added new radio and check button icons as SVG images
    - Added one new microbe loading screen image
    - Added type icons for compound and environment panels
    - ATP balance bar tooltips now show which compounds are required to produce that amount of ATP
    - Tweaked editor GUI to be closer to what it was before the Godot 4 update
    - Abbreviated per second as just "s" in chemical equation speeds
    - Updated the space and industrial stage prototype visuals
    - Reduced pulling cilia power a bit when there are many of them
    - Added an animation for when something is digested so that it shrinks to a small size instead of just visually popping out of existence
    - Redid compound icons as SVG images
    - Reworked patch and some UI icons as SVG files
    - Created priority levels for PhotoStudio image generation to avoid important images taking minutes to load on slower computers
    - Added an in-memory image cache for the PhotoStudio to speed up displaying images of the same species again
    - Added a GDExtension for Thrive that will be used in the future to improve various things
    - Added a compound cloud benchmark
    - Added experimental dynamic compounds feature where patches dynamically change their available compound amounts based on the species that are in it
    - Fixed mucocyst to work in cell colonies
    - Fixed water currents not affecting chunks correctly ever since the ECS refactoring probably
    - Fixed loading screen loading spinner not spinning smoothly
    - Fixed Thriveopedia search not working
    - Fixed a bug where the editor showed patch compounds as they were during the previous generation
    - Fixed initial species compounds calculation never giving iron due to calculating only with available compounds in the default biome type
    - Fixed the strain system always taking movement ATP while not moving
    - Fixed used matter storage size flickering when ejecting too big objects that no longer fit in storage
    - Fixed some cases where ejected cells wouldn't properly die and despawn
    - Fixed saving status text not fading out properly
    - Fixed image sizes in concept art gallery cards
    - Fixed clicking on a miche node that is empty not clearing the info box which was pretty confusing GUI behaviour
    - Reduced lag spike on selecting different patch to show details for
    - Added a limit to the recent patch notes shown to ensure it doesn't try to display truly ridiculous number of notes for someone who hasn't played Thrive for years
    - Fixed editor saves failing to load with a completed endosymbiosis action
    - Fixed right editor panel being able to be too wide in certain translations
    - Fixed auto-evo being able to remove the nucleus as a mutation
    - Fixed art gallery model viewer not working correctly with 3D menu backgrounds being enabled
    - Fixed "x worlds" text not being translated initially in the auto-evo exploring tool
    - Hopefully fixed some engulf digestion and cells dying during it issues that caused cell chunks to spawn
    - Added missing models to the art gallery model viewer
    - Reimplemented debug line renderer as a GDExtension to make it much faster than before
    - Refactored our compound related code to use enum values to simplify a lot of our code that needed to define special operations for various compounds
    - Added code project for running small code benchmarks easily in the future
    - Organelle tooltips are now dynamically generated from the organelle JSON data
    - Improved our setup instructions for compiling on Linux
    - Added new automatic code style checks related to post-increment
    - Updated YamlDotNet from 16.0.0 to 16.1.3
    - Updated Jolt Physics Engine
    - Tweaked the pre-commit hook to be much shorter
    - Updated code checking tools
    - Improved our wiki content updating script
    - Updated wiki text content
    - Updated translations

0.8.0:
  IntroductionText: |
    This release focused on completing the last 0.7.x roadmap items, most of which were related to the microbe editor. This release has new editor features like a way to control organelle split order and an organelle suggestion. Also a lot of tooltips and other displays in the editor were improved and fixed. Besides the editor there are a lot of microbe stage improvements, the most visible being redone microbe organelle and membrane graphics as well as improvements to the dynamic compounds system.
  ReleaseLink: https://github.com/Revolutionary-Games/Thrive/releases/tag/v0.8.0
  PatchNotes:
    - Added an organelle suggestion that is shown in the editor which gives info on what auto-evo would like the player to add
    - Added a new tab in the editor to control organelle split order for more fine tuned control over ATP during reproduction
    - Reintroduced Mac builds of Thrive. Thrive is again playable on macOS but this is not official full support yet.
    - "Balancing changes to microbe storage: most organelles now give much less storage to make storage an actual gameplay mechanic that needs planning"
    - Created new membrane textures that help make the 3D membranes of different types more easily distinguishable (as the change to 3D membranes made all the membranes look very similar)
    - Reworked all organelle 3D models
    - Added sulfur chunks
    - Added a bloom strength slider and enabled it by default
    - Added an underwater vent eruption event that creates extra hydrogen sulfide and carbon dioxide in the patch
    - Added a miche viewer to the patch map tab
    - Improved gas update logic to make sure gases don't add up to over 100%
    - Made compounds move much more freely between patches
    - Made nitrogen dynamic
    - Added hydrogen sulfide compound consumption by species
    - Added iron chunks being oxidised by oxygen making them less common once oxygen starts spreading through the world
    - Removed experimental compound production mode as it was too unbalanced and didn't get any work done on it since the last release
    - Improved the microbe AI in terms of when it uses sprinting
    - Mucocyst can now be used by the AI to defend itself
    - Added difficulty options for what to do with stored compounds after reproducing
    - Added disk caching for generated species images. This makes displaying species images a lot faster after restarting the game and loading a save. By default the cache aims to use at most 1 GB of disk space.
    - Reduced unlock requirements of gas-dependent organelles
    - Reduced base endosymbiosis time costs by one
    - Lowered hydrogenase ATP output by 10%
    - Made slight balancing tweaks to photosynthesis glucose production and glucose use of a few ATP-generating organelles
    - Renamed Nitrogen-Fixing Plastid to Nitroplast
    - Made glucose reduction text only apply to discovered patches to make the percentages higher to make it look like a more important message
    - Added a warning tooltip for the speed stat in the editor about how it is not fully accurate
    - Added an icon for the mucocyst upgrade
    - Reworked the experimental siderophore feature action icon
    - Made engulfing info be last in the membrane tooltips like it was previously (before tooltip refactoring broke it)
    - Added a new and more visible cell membrane animation
    - Increased visibility of engulf wave effect slightly
    - Added bigger warning when enabling experimental features mode
    - Added tooltips for chemoreceptor upgrade GUI amount and distance sliders
    - Updated nitrogen icon to not have glow anymore to be more consistent with other compound icons
    - Tweaked some GUI element alignments to be more similar to what they were before we upgraded to Godot 4
    - Added a tip in the unlock tooltip that endosymbiosis is an alternative unlock method
    - Fixed process toggle buttons not always matching the underlying process states and fixed processes re-enabling by themselves when organelles reproduced
    - Fixed hex popup menu being able to operate on deleted hexes which could be exploited for infinite MP. Also fix a related bug in the prototype editors.
    - Fixed not all patches showing up in the editor report patch selector dropdown
    - Fixed a bug in the volcanism effect that caused it to add way more CO2 than originally intended
    - Fixed non-LAWK unlocks showing after loading a save
    - Fixed aspect ratio of sunlight icon in daytime selection bar
    - Fixed chemical equation arrow to be vertically centered
    - Fixed a bug where compound diffusion between patches could move too much compound
    - Fixed auto-evo migration usefulness calculations using the wrong miche tree
    - Fixed organelle scale-affecting upgrades not applying while moving that organelle to a new location
    - Fixed bug with osmoregulation cost being shown on upgrade tooltips
    - Fixed osmoregulation showing in rigidity slider tooltip
    - Fixed lag when zooming out a draggable container while it is still displaying its initial animation
    - Fixed the timeline incorrectly claiming some species to be extinct
    - Fixed moved cell in body plan editor being invisible if no cell type to place was selected
    - Fixed a missing wordwrap on a label in the mod manager
    - Fixed multiple bugs in our species visual hashing algorithm that made memory caching also less efficient
    - Fixed extinct species not having previews in auto-evo exploring tool
    - Made auto-evo exploring tool show patch events, note that historical view for events doesn't work yet
    - Disabled temperature miche being generated when in LAWK mode (no species could occupy it but for clarity it is entirely disabled now)
    - Added two new multicellular loading screen artworks
    - Tweaked PhotoStudio image capture distance math
    - Made organelle tooltips not constantly try to refresh their displayed chemical equations
    - Added an energy icon for the later stage prototypes
    - Linked late multicellular prototype jump force to mass to make jumping speed more consistent
    - Added proper content for the Thriveopedia page of ferroplast
    - Added code for UV unwrapping of macroscopic creatures, but there's no textures yet so the code isn't enabled
    - Native lib install tool now prints full paths to try to reduce potential confusion
    - Started backend work on allowing more kinds of unit tests for Thrive using gdUnit4
    - Added workaround in the C# interop code to work with newer native library compiles
    - Added a few explicit garbage collector calls when the game is loading to hopefully reduce chance that it runs during gameplay
    - Updated to .NET 9
    - Updated YamlDotNet from 16.1.3 to 16.2.1
    - Updated System.Numerics.Vectors from 4.5.0 to 4.6.0
    - Updated automatic code checking tools
    - Improved a few aspects of our CMake files
    - "Steam: Fixed workshop upload dialog not showing all error conditions"
    - Updated translations
