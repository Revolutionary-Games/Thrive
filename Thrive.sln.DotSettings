<wpf:ResourceDictionary xml:space="preserve" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:ss="urn:shemas-jetbrains-com:settings-storage-xaml" xmlns:wpf="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_MULTILINE_BINARY_EXPRESSIONS_CHAIN/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/KEEP_EXISTING_DECLARATION_PARENS_ARRANGEMENT/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/LINE_FEED_AT_FILE_END/@EntryValue">True</s:Boolean>
	<s:Int64 x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/MAX_ENUM_MEMBERS_ON_LINE/@EntryValue">1</s:Int64>
	<s:Int64 x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/MAX_FORMAL_PARAMETERS_ON_LINE/@EntryValue">8</s:Int64>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_ACCESSORHOLDER_ATTRIBUTE_ON_SAME_LINE_EX/@EntryValue">NEVER</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_FIELD_ATTRIBUTE_ON_SAME_LINE_EX/@EntryValue">NEVER</s:String>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/SPACE_AFTER_OPERATOR_KEYWORD/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/SPACE_AFTER_TYPECAST_PARENTHESES/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_BEFORE_FIRST_TYPE_PARAMETER_CONSTRAINT/@EntryValue">True</s:Boolean>
	<s:Int64 x:Key="/Default/CodeStyle/CodeFormatting/XmlDocFormatter/INDENT_SIZE/@EntryValue">2</s:Int64>
	<s:Int64 x:Key="/Default/CodeStyle/CodeFormatting/XmlDocFormatter/TAB_WIDTH/@EntryValue">2</s:Int64>
	<s:String x:Key="/Default/CodeStyle/CSharpFileLayoutPatterns/Pattern/@EntryValue">&lt;Patterns xmlns="urn:shemas-jetbrains-com:member-reordering-patterns"&gt;
    &lt;!--Do not reorder COM interfaces and structs marked by StructLayout attribute--&gt;
    &lt;Pattern&gt;
        &lt;Match&gt;
            &lt;Or Weight="100"&gt;
                &lt;And&gt;
                    &lt;Kind Is="interface"/&gt;
                    &lt;Or&gt;
                        &lt;HasAttribute CLRName="System.Runtime.InteropServices.InterfaceTypeAttribute"/&gt;
                        &lt;HasAttribute CLRName="System.Runtime.InteropServices.ComImport"/&gt;
                    &lt;/Or&gt;
                &lt;/And&gt;
                &lt;HasAttribute CLRName="System.Runtime.InteropServices.StructLayoutAttribute"/&gt;
            &lt;/Or&gt;
        &lt;/Match&gt;
    &lt;/Pattern&gt;
    &lt;!--Special formatting of NUnit test fixture--&gt;
    &lt;Pattern RemoveAllRegions="true"&gt;
        &lt;Match&gt;
            &lt;And Weight="100"&gt;
                &lt;Kind Is="class"/&gt;
                &lt;HasAttribute CLRName="NUnit.Framework.TestFixtureAttribute" Inherit="true"/&gt;
            &lt;/And&gt;
        &lt;/Match&gt;
        &lt;!--Setup/Teardow--&gt;
        &lt;Entry&gt;
            &lt;Match&gt;
                &lt;And&gt;
                    &lt;Kind Is="method"/&gt;
                    &lt;Or&gt;
                        &lt;HasAttribute CLRName="NUnit.Framework.SetUpAttribute" Inherit="true"/&gt;
                        &lt;HasAttribute CLRName="NUnit.Framework.TearDownAttribute" Inherit="true"/&gt;
                        &lt;HasAttribute CLRName="NUnit.Framework.FixtureSetUpAttribute" Inherit="true"/&gt;
                        &lt;HasAttribute CLRName="NUnit.Framework.FixtureTearDownAttribute" Inherit="true"/&gt;
                    &lt;/Or&gt;
                &lt;/And&gt;
            &lt;/Match&gt;
        &lt;/Entry&gt;
        &lt;!--All other members--&gt;
        &lt;Entry/&gt;
        &lt;!--Test methods--&gt;
        &lt;Entry&gt;
            &lt;Match&gt;
                &lt;And Weight="100"&gt;
                    &lt;Kind Is="method"/&gt;
                    &lt;HasAttribute CLRName="NUnit.Framework.TestAttribute" Inherit="false"/&gt;
                &lt;/And&gt;
            &lt;/Match&gt;
            &lt;Sort&gt;
                &lt;Name/&gt;
            &lt;/Sort&gt;
        &lt;/Entry&gt;
    &lt;/Pattern&gt;
    &lt;!--Default pattern--&gt;
    &lt;Pattern&gt;
        &lt;!--Constants--&gt;
        &lt;Entry&gt;
            &lt;Match&gt;
                &lt;Kind Is="constant"/&gt;
            &lt;/Match&gt;
            &lt;Sort&gt;
                &lt;Access Order="public internal protected-internal protected private"/&gt;
                &lt;Readonly/&gt;
                &lt;Static/&gt;
                &lt;Name/&gt;
            &lt;/Sort&gt;
        &lt;/Entry&gt;
        &lt;!--Fields--&gt;
        &lt;Entry&gt;
            &lt;Match&gt;
                &lt;Kind Is="field"/&gt;
            &lt;/Match&gt;
            &lt;Sort&gt;
                &lt;Access Order="public internal protected-internal protected private"/&gt;
                &lt;Readonly/&gt;
                &lt;Static/&gt;
                &lt;Name/&gt;
            &lt;/Sort&gt;
        &lt;/Entry&gt;
        &lt;!--Constructors. Place static one first--&gt;
        &lt;Entry&gt;
            &lt;Match&gt;
                &lt;Kind Is="constructor"/&gt;
            &lt;/Match&gt;
            &lt;Sort&gt;
                &lt;Static/&gt;
                &lt;Access Order="public internal protected-internal protected private"/&gt;
            &lt;/Sort&gt;
        &lt;/Entry&gt;
        &lt;!--Destructors. Place static one first--&gt;
        &lt;Entry&gt;
            &lt;Match&gt;
                &lt;Kind Is="destructor"/&gt;
            &lt;/Match&gt;
            &lt;Sort&gt;
                &lt;Static/&gt;
                &lt;Access Order="public internal protected-internal protected private"/&gt;
            &lt;/Sort&gt;
        &lt;/Entry&gt;
        &lt;!--Delegates--&gt;
        &lt;Entry&gt;
            &lt;Match&gt;
                &lt;Kind Is="delegate"/&gt;
            &lt;/Match&gt;
            &lt;Sort&gt;
                &lt;Access Order="public internal protected-internal protected private"/&gt;
                &lt;Readonly/&gt;
                &lt;Static/&gt;
                &lt;Name/&gt;
            &lt;/Sort&gt;
        &lt;/Entry&gt;
        &lt;!-- Events --&gt;
        &lt;Entry&gt;
            &lt;Match&gt;
                &lt;Kind Is="event"/&gt;
            &lt;/Match&gt;
            &lt;Sort&gt;
                &lt;Access Order="public internal protected-internal protected private"/&gt;
                &lt;Readonly/&gt;
                &lt;Static/&gt;
                &lt;Name/&gt;
            &lt;/Sort&gt;
        &lt;/Entry&gt;
        &lt;!--Enums--&gt;
        &lt;Entry&gt;
            &lt;Match&gt;
                &lt;Kind Is="enum"/&gt;
            &lt;/Match&gt;
            &lt;Sort&gt;
                &lt;Access Order="public internal protected-internal protected private"/&gt;
                &lt;Readonly/&gt;
                &lt;Static/&gt;
                &lt;Name/&gt;
            &lt;/Sort&gt;
        &lt;/Entry&gt;
        &lt;!--Properties--&gt;
        &lt;Entry&gt;
            &lt;Match&gt;
                &lt;And&gt;
                    &lt;Kind Is="property"/&gt;
                    &lt;Not&gt;
                        &lt;Kind Is="indexer"/&gt;
                    &lt;/Not&gt;
                &lt;/And&gt;
            &lt;/Match&gt;
            &lt;Sort&gt;
                &lt;Access Order="public internal protected-internal protected private"/&gt;
                &lt;Static/&gt;
                &lt;Name/&gt;
            &lt;/Sort&gt;
        &lt;/Entry&gt;
        &lt;!--Indexers--&gt;
        &lt;Entry&gt;
            &lt;Match&gt;
                &lt;Kind Is="indexer"/&gt;
            &lt;/Match&gt;
            &lt;Sort&gt;
                &lt;Access Order="public internal protected-internal protected private"/&gt;
                &lt;Static/&gt;
                &lt;Name/&gt;
            &lt;/Sort&gt;
        &lt;/Entry&gt;
        &lt;!--Methods--&gt;
        &lt;Entry&gt;
            &lt;Match&gt;
                &lt;And&gt;
                    &lt;Or&gt;
                        &lt;Kind Is="method"/&gt;
                        &lt;Kind Is="operator"/&gt;
                        &lt;HandlesEvent/&gt;
                    &lt;/Or&gt;
                    &lt;Not&gt;
                        &lt;Kind Is="destructor"/&gt;
                    &lt;/Not&gt;
                &lt;/And&gt;
            &lt;/Match&gt;
            &lt;Sort&gt;
                &lt;Access Order="public internal protected-internal protected private"/&gt;
                &lt;Static/&gt;
                &lt;Abstract/&gt;
                &lt;Virtual/&gt;
                &lt;Override/&gt;
                &lt;Name/&gt;
            &lt;/Sort&gt;
        &lt;/Entry&gt;
        &lt;!--all other members--&gt;
        &lt;Entry/&gt;
        &lt;!--nested types--&gt;
        &lt;Entry&gt;
            &lt;Match&gt;
                &lt;Kind Is="type"/&gt;
            &lt;/Match&gt;
            &lt;Sort&gt;
                &lt;Access Order="public internal protected-internal protected private"/&gt;
                &lt;Static/&gt;
                &lt;Abstract/&gt;
                &lt;Virtual/&gt;
                &lt;Override/&gt;
                &lt;Name/&gt;
            &lt;/Sort&gt;
        &lt;/Entry&gt;
    &lt;/Pattern&gt;
&lt;/Patterns&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/Abbreviations/=AI/@EntryIndexedValue">AI</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/Abbreviations/=ATP/@EntryIndexedValue">ATP</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/Abbreviations/=CO/@EntryIndexedValue">CO</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/Abbreviations/=CP/@EntryIndexedValue">CP</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/Abbreviations/=CPU/@EntryIndexedValue">CPU</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/Abbreviations/=FPS/@EntryIndexedValue">FPS</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/Abbreviations/=GUI/@EntryIndexedValue">GUI</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/Abbreviations/=HP/@EntryIndexedValue">HP</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/Abbreviations/=HUD/@EntryIndexedValue">HUD</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/Abbreviations/=ID/@EntryIndexedValue">ID</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/Abbreviations/=JSON/@EntryIndexedValue">JSON</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/Abbreviations/=MSAA/@EntryIndexedValue">MSAA</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/Abbreviations/=OS/@EntryIndexedValue">OS</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/Abbreviations/=UI/@EntryIndexedValue">UI</s:String>
	<s:String x:Key="/Default/CustomTools/CustomToolsData/@EntryValue"></s:String>
	<s:Boolean x:Key="/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EPsi_002ECSharp_002ECodeStyle_002ECSharpKeepExistingMigration/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EPsi_002ECSharp_002ECodeStyle_002ECSharpPlaceEmbeddedOnSameLineMigration/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EPsi_002ECSharp_002ECodeStyle_002ECSharpUseContinuousIndentInsideBracesMigration/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EPsi_002ECSharp_002ECodeStyle_002ESettingsUpgrade_002EMigrateBlankLinesAroundFieldToBlankLinesAroundProperty/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=Applyable/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=autoloaded/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=autoloads/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=Biome/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=biomes/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=carbondioxide/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=cutscene/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=despawn/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=despawned/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=despawning/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=Despawns/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=engulfable/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=engulfer/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=eukaryotic/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=Freebuild/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=freebuilding/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=gameplay/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=hacky/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=hitpoints/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=hydrogensulfide/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=lethargicness/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=Loadables/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=mitochondrion/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=MSAA/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=multiplayer/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=Osmoregulation/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=oxytoxy/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=pilus/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=playthrough/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=prokaryote/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=prokaryotic/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=Respawn/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=respawning/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=slerp/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=slerped/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=slerps/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=spawner/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=spawners/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=unapplied/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=unpaused/@EntryIndexedValue">True</s:Boolean></wpf:ResourceDictionary>